/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 *
 * ZMKキーコードとJIS配列の対応表
 * +-------------+----------------+------------------+
 * | ZMKキーコード | US配列での文字  | JIS配列での入力結果 |
 * +-------------+----------------+------------------+
 * | N1          | 1              | 1                |
 * | N2          | 2              | 2                |
 * | N3          | 3              | 3                |
 * | N4          | 4              | 4                |
 * | N5          | 5              | 5                |
 * | N6          | 6              | 6                |
 * | N7          | 7              | 7                |
 * | N8          | 8              | 8                |
 * | N9          | 9              | 9                |
 * | N0          | 0              | 0                |
 * | MINUS       | -              | -                |
 * | EQUAL       | =              | ^                |
 * | GRAVE       | `              | @                |
 * | LBKT        | [              | @                |
 * | RBKT        | ]              | [                |
 * | BSLH        | \              | ¥                |
 * | SEMI        | ;              | +                |
 * | SQT         | '              | :                |
 * | COMMA       | ,              | ,                |
 * | DOT         | .              | .                |
 * | FSLH        | /              | /                |
 * | EXCL        | !              | !                |
 * | AT          | @              | "                |
 * | HASH        | #              | #                |
 * | DLLR        | $              | $                |
 * | PRCNT       | %              | %                |
 * | CARET       | ^              | &                |
 * | AMPS        | &              | '                |
 * | ASTRK       | *              | (                |
 * | LPAR        | (              | )                |
 * | RPAR        | )              | ~                |
 * | PIPE        | |              | |                |
 * | PLUS        | +              | ;                |
 * | COLON       | :              | *                |
 * | DQT         | "              | @                |
 * | LT          | <              | <                |
 * | GT          | >              | >                |
 * | QMARK       | ?              | ?                |
 * | UNDER       | _              | _                |
 * | LBRC        | {              | {                |
 * | RBRC        | }              | }                |
 * | TILDE       | ~              | ^                |
 * | INT_YEN     | -              | ¥                |
 * | INT_RO      | -              | \                |
 * | LANG1       | -              | 英数キー           |
 * | LANG2       | -              | かなキー           |
 * +-------------+----------------+------------------+
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

/* レイヤー定義 */

#define DEFAULT 0
#define NAVIGATION 1
#define NUMPAD 2
#define SYMBOL 3
#define MAGIC 4
#define FACTORY_TEST 5

/*
 * キーボード設定
 * すべての動作、マクロ、キーマップ定義は / { ... } ノード内に含まれています
 */

/ {
    behaviors {
        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };

        // Home row mod-tap configurations

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <170>;
            bindings = <&kp>, <&kp>;
        };

        // レイヤータップ（ホールド: レイヤー, タップ: キー）
        // 「balanced」フレーバー - ホールドとタップのバランスが取れた設定

        lth_balanced: layer_tap_hold_balanced {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_BALANCED";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        // 「tap-preferred」フレーバー - タップが優先される設定

        lth_tap_pref: layer_tap_hold_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TAP_PREF";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        // 「hold-preferred」フレーバー - ホールドが優先される設定

        lth_hold_pref: layer_tap_hold_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_HOLD_PREF";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        // モディファイアタップ設定（ホールド: モディファイア, タップ: 通常キー）
        // 「balanced」フレーバー - ホールドとタップのバランスが取れた設定

        mt_balanced: mod_tap_balanced {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_BALANCED";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        // 「tap-preferred」フレーバー - タップが優先される設定

        mt_tap_pref: mod_tap_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_TAP_PREF";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        // 「hold-preferred」フレーバー - ホールドが優先される設定

        mt_hold_pref: mod_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_HOLD_PREF";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <180>;
            bindings = <&kp>, <&kp>;
        };

        // Copy/Cut/Paste tap-dance

        td_cp: tap_dance_copypaste {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_COPYPASTE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(C)>, <&kp LC(V)>;
        };

        select_forward: select_forward {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&select_word_right>, <&extend_word_right>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        select_backward: select_backward {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&select_word_left>, <&extend_word_left>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        select_line_forward: select_line_forward {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&select_line_right>, <&extend_line_right>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        select_line_backward: select_line_backward {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&select_line_left>, <&extend_line_left>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Word単位の移動用mod-morph
        // 単語単位で左に移動（Shift+で選択しながら移動）

        word_left: word_left {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LC(LEFT)>, <&kp LS(LC(LEFT))>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // 単語単位で右に移動（Shift+で選択しながら移動）

        word_right: word_right {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT)>, <&kp LS(LC(RIGHT))>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // 段落単位の移動用mod-morph
        // 段落単位で上に移動（Shift+で選択しながら移動）

        paragraph_up: paragraph_up {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LC(UP)>, <&kp LS(LC(UP))>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // 段落単位で下に移動（Shift+で選択しながら移動）

        paragraph_down: paragraph_down {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LC(DOWN)>, <&kp LS(LC(DOWN))>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // 削除操作のmod-morph（Shift+でワード削除）

        delete_selection: delete_selection {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DELETE>, <&kp LC(DELETE)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        /* Status and System Control Macros */

        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
            wait-ms = <0>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
            wait-ms = <0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
            wait-ms = <0>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
            wait-ms = <0>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
            wait-ms = <0>;
        };

        bt_4: bt_profile_macro_4 {
            compatible = "zmk,behavior-macro";
            label = "BT_4";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 4>;
            wait-ms = <0>;
        };

        /* Text Selection and Navigation Macros */

        select_none: select_none {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&kp DOWN &kp UP &kp RIGHT &kp LEFT>;
        };

        select_word_right: select_word_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&kp LC(RIGHT) &kp LC(LEFT) &kp LC(LS(RIGHT))>;
        };

        select_word_left: select_word_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&kp LC(LEFT) &kp LC(RIGHT) &kp LC(LS(LEFT))>;
        };

        extend_word_right: extend_word_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&kp LC(LS(RIGHT))>;
        };

        extend_word_left: extend_word_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&kp LC(LS(LEFT))>;
        };

        select_line_right: select_line_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&kp HOME &kp LS(END)>;
        };

        select_line_left: select_line_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&kp END &kp LS(HOME)>;
        };

        extend_line_right: extend_line_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&kp LS(DOWN) &kp LS(END)>;
        };

        extend_line_left: extend_line_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&kp LS(UP) &kp LS(HOME)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /* Base layer with default key mappings (Layer 0) */

        default_layer {
            /* ---------------------------------------------------------------------------------------------------------------------------------
             * |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
             * |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
             * |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
             * |  TAB  |A/GUI|S/ALT|D/CTL |F/SFT |  G   |                                                 |  H   |J/SFT |K/CTL |L/ALT |;/GUI |   '  |
             * | CTRL  |  Z  |  X  |  C   |  V   |  B   | LSHFT | COPY  | ESC  | | LGUI | UNDO  | RSHFT  |  N   |   M   |   ,   |  .   |   /   | PGUP |
             * | MAGIC | HOME| END | LEFT | RIGHT|      |BS/NAV |L1/SYM |SP/NUM| | ENT  | DEL   |L2/NAV |      |  UP   | DOWN  |  [   |   ]   | PGDN |
             */

            bindings = <
&kp F1          &kp F2      &kp F3      &kp F4       &kp F5                                                                                                                                                                                                       &kp F6       &kp F7       &kp F8             &kp F9         &kp F10
&kp EQUAL       &kp N1      &kp N2      &kp N3       &kp N4       &kp N5                                                                                                                                                                                  &kp N6  &kp N7       &kp N8       &kp N9             &kp N0         &kp MINUS
&kp TAB         &kp Q       &kp W       &kp E        &kp R        &kp T                                                                                                                                                                                   &kp Y   &kp U        &kp I        &kp O              &kp P          &kp LEFT_BRACKET
&kp ESCAPE      &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHFT F  &kp G                                                                                                                                                                                   &kp H   &hm RSHFT J  &hm RCTRL K  &hm RALT L         &hm RGUI SEMI  &kp SQT
&kt LSHFT       &kp Z       &kp X       &kp C        &kp V        &kp B   &paragraph_down                     &td_cp                       &kp DELETE             &kp LGUI                        &kp TAB                      &paragraph_up              &kp N   &kp M        &kp COMMA    &kp DOT            &kp FSLH       &kp INT_RO
&magic MAGIC 0  &kp HOME    &kp END     &kp LEFT     &kp RIGHT            &mt_hold_pref LEFT_SHIFT BACKSPACE  &lth_hold_pref 1 LANGUAGE_2  &lth_tap_pref 3 SPACE  &mt_hold_pref RIGHT_ALT ESCAPE  &lth_hold_pref 2 LANGUAGE_1  &mt_hold_pref RCTRL ENTER          &kp UP       &kp DOWN     &kp RIGHT_BRACKET  &kp BACKSLASH  &kp PIPE
            >;
        };

        /* Navigation layer (Layer 1) */

        navigation_layer {
            /* ---------------------------------------------------------------------------------------------------------------------------------
             * | BRIDN | BRIUP | PREV | NEXT  | PLAY  |                                                               | MUTE  | VOLDN | VOLUP |  ---  | PAUSE |
             * | trans |  ---  |  ^   |  $    |  %    | HOME |                                                 | UNDO  | CUT   | COPY  | PASTE | PSCR  | SLCK  |
             * | trans |  ---  |WORD← |WORD→  |PARA↑  |PARA↓ |                                                 |   (   |   )   |  [    |  ]    | ---   | ---   |
             * | trans |  ---  |  h   |  j    |  k    |  l   |                                                 | LEFT  | DOWN  |  UP   | RIGHT | PGUP  | PGDN  |
             * | trans | MENU  | UNDO | REDO  | SEL_A | SEL→ | CUT   | COPY  | PASTE | trans | trans | trans  | HOME  | END   | SEL←L | SEL←W | ---   | ---   |
             * | trans |  ---  | INS  | F11   | F12   |      | trans | trans | trans | SPACE | DEL+  | trans  |       | ---   | ---   | ---   | ESC   | trans |
             */

            bindings = <
&kp C_BRI_DN  &kp C_BRI_UP       &kp C_PREV       &kp C_NEXT  &kp C_PP                                                                                     &kp C_MUTE  &kp C_VOL_DN           &kp C_VOL_UP      &none      &kp PAUSE_BREAK
&trans        &none              &kp CARET        &kp DOLLAR  &kp PERCENT     &kp HOME                                                          &kp LC(Z)  &kp LC(X)   &kp LC(C)              &kp LC(V)         &kp PSCRN  &kp SLCK
&trans        &select_forward    &select_forward  &kp END     &paragraph_up   &paragraph_down                                                   &kp LPAR   &kp RPAR    &kp LBKT               &kp RBKT          &none      &none
&trans        &hm LEFT_GUI HOME  &kp LEFT_ALT     &kp RCTRL   &kp LEFT_SHIFT  &none                                                             &kp LEFT   &kp DOWN    &kp UP                 &kp RIGHT         &kp PG_UP  &kp PG_DN
&trans        &kp LC(Z)          &kp LC(X)        &kp LC(C)   &kp LC(V)       &select_backward  &trans  &trans  &trans  &trans  &trans  &trans  &kp HOME   &kp END     &select_line_backward  &select_backward  &none      &none
&trans        &none              &kp INS          &kp F11     &kp F12                           &trans  &trans  &trans  &trans  &trans  &trans             &none       &none                  &none             &kp ESC    &trans
            >;
        };

        /* Numeric keypad layer (Layer 2) - 数字キーパッドとマウス操作 */

        numpad_layer {
            /* ---------------------------------------------------------------------------------------------------------------------------------
             * | ---  | ---  | ---  | ---   | ---   |                                                               | NLCK | /    | *    | -    | BSPC |
             * | ---  | SCR↑ | SCR← | MOUS↑ | SCR→  | SCR↓ |                                                 | CALC | 7    | 8    | 9    | +    | =    |
             * | ---  | ---  | MOUS← | MOUS↓ | MOUS→ |SCR_UP|                                                 | TAB  | 4    | 5    | 6    | ,    | ENT  |
             * | ---  | UNDO | CUT  | COPY  | PASTE |SCR_DN|                                                 | 00   | 1    | 2    | 3    | .    | DEL  |
             * | ---  | ---  | ---  | ---   | ---   | ---  |LCLK |RCLK |MCLK | LCLK | RCLK | MCLK | MB4  | MB5  | ---  | 0    | ---  | ---  |
             * | ---  | ---  | ---  | ---   | ---   |      |LCLK |RCLK |MCLK |SCR_UP|SCR_DN| MB4  |      | ---  | ---  | ---  | ---  | ---  |
             */

            bindings = <
&none  &none         &none           &none           &none                                                                                                                     &kp KP_NLCK  &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp KP_MINUS  &kp BSPC
&none  &msc SCRL_UP  &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &msc SCRL_DOWN                                                                            &kp C_AL_CALC  &kp KP_N7    &kp KP_N8        &kp KP_N9        &kp KP_PLUS   &kp EQUAL
&none  &none         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_UP                                                                              &kp TAB        &kp KP_N4    &kp KP_N5        &kp KP_N6        &kp COMMA     &kp KP_ENTER
&none  &kp LC(Z)     &kp LC(X)       &kp LC(C)       &kp LC(V)        &msc SCRL_DOWN                                                                            &kp KP_N0      &kp KP_N1    &kp KP_N2        &kp KP_N3        &kp KP_DOT    &kp DEL
&none  &none         &none           &none           &none            &none           &mkp LCLK  &mkp RCLK  &mkp MCLK  &mkp LCLK     &mkp RCLK       &mkp MCLK  &mkp MB4       &mkp MB5     &kp KP_NUMBER_0  &kp KP_N0        &none         &none
&none  &none         &none           &none           &none                            &mkp LCLK  &mkp RCLK  &mkp MCLK  &msc SCRL_UP  &msc SCRL_DOWN  &none                     &none        &none            &none            &none         &none
            >;
        };

        /* Symbol Layer (Layer 3) - JIS配列に合わせた記号配置 */

        symbol_layer {
            /* ---------------------------------------------------------------------------------------------------------------------------------
             * | ESC  |  !   |  "   |  #   |  $   |                                                               |  %   |  &   |  '   |  (   |  )   |
             * | trans|  1   |  2   |  3   |  4   |  5   |                                                 |  6   |  7   |  8   |  9   |  0   |  ~   |
             * | trans|  @   |  [   |  ]   |  ;   |  ^   |                                                 |  -   |  =   |  @   |  [   |  +   |  *   |
             * | caps |  ^   |  <   |  >   |  ¥   |  |   |                                                 |  ¥   |  *   |  +   |  /   |  ?   |  \   |
             * | trans|  F1  |  F2  |  F3  |  F4  |  F5  | trans| trans| trans| trans| trans| trans| trans|  F6  |  F7  |  F8  |  F9  |  F10 |
             * | trans|  F11 |  F12 |BTCLR |BT_SEL|      | trans| trans| trans| trans| trans | trans|      |BTCLR |BT_SEL| ---  | ---  | ---  |
             */

            bindings = <
&kp ESC   &kp EXCL   &kp LS(N2)  &kp HASH  &kp DLLR                                                                                &kp PRCNT  &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR
&trans    &kp N1     &kp N2      &kp N3    &kp N4       &kp N5                                                        &kp N6       &kp N7     &kp N8     &kp N9    &kp N0     &kp RPAR
&trans    &kp GRAVE  &kp LBKT    &kp RBKT  &kp SEMI     &kp EQUAL                                                     &kp MINUS    &kp EQUAL  &kp GRAVE  &kp LBKT  &kp SEMI   &kp COLON
&kp CAPS  &kp EQUAL  &kp LT      &kp GT    &kp INT_YEN  &kp PIPE                                                      &kp INT_YEN  &kp COLON  &kp SEMI   &kp FSLH  &kp QMARK  &kp INT_RO
&trans    &kp F1     &kp F2      &kp F3    &kp F4       &kp F5     &trans  &trans  &trans  &trans     &trans  &trans  &kp F6       &kp F7     &kp F8     &kp F9    &kp F10    &none
&trans    &kp F11    &kp F12     &none     &none                   &trans  &trans  &trans  &kp SPACE  &trans  &trans               &none      &none      &none     &none      &none
            >;
        };

        /* System control and RGB configuration layer (Layer 4) */

        magic_layer {
            /* ---------------------------------------------------------------------------------------------------------------------------------
             * | BTCLR | ---  | ---  | ---   | ---   |                                                               | ---  | ---  | ---  | ---  | BTCLA |
             * | ---   | ---  | ---  | ---   | ---   | ---  |                                                 | ---  | ---  | ---  | ---  | ---  | ---   |
             * | ---   | SPI  | SAI  | HUI   | BRI   | TOG  |                                                 | ---  | ---  | ---  | ---  | ---  | ---   |
             * | BOOT  | SPD  | SAD  | HUD   | BRD   | EFF  |                                                 | ---  | ---  | ---  | ---  | ---  | BOOT  |
             * | RESET | ---  | ---  | ---   | ---   | ---  | BT2  | BT3  | ---  | ---  | ---  | ---  | ---  | ---  | ---  | ---  | ---  | RESET |
             * | ---   | ---  | ---  | ---   | ---   |      | BT0  | BT1  | USB  | ---  | ---  | ---  |      | ---  | ---  | ---  | ---  | TO0   |
             */

            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                     &none  &none  &none  &none  &bt BT_CLR_ALL
&none        &none            &none            &none            &none            &none                                                             &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                   &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                   &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none         &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB  &none  &none  &none         &none  &none  &none  &none  &to 0
            >;
        };

        /* Factory test layer - transparent layer for testing (Layer 5) */

        factory_test_layer {
            /* ---------------------------------------------------------------------------------------------------------------------------------
             * | trans | trans | trans | trans | trans |                                                               | trans | trans | trans | trans | trans |
             * | trans | trans | trans | trans | trans | trans |                                                 | trans | trans | trans | trans | trans | trans |
             * | trans | trans | trans | trans | trans | trans |                                                 | trans | trans | trans | trans | trans | trans |
             * | trans | trans | trans | trans | trans | trans |                                                 | trans | trans | trans | trans | trans | trans |
             * | trans | trans | trans | trans | trans | trans | trans | trans | trans | trans | trans | trans | trans | trans | trans | trans | trans | trans |
             * | trans | trans | trans | trans | trans |       | trans | trans | trans | trans | trans | trans |       | trans | trans | trans | trans | trans |
             */

            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
